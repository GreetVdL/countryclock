{"version":3,"sources":["logo.svg","components/Country.js","components/Header.js","components/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Country","handleChange","event","props","updateStateCountry","target","value","className","onChange","this","React","Component","Header","Clock","tick","countryId","updateStateTime","countryIds","belgium","iceland","portugal","utcToZonedTime","state","time","country","toLocaleTimeString","timer","setInterval","clearInterval","getLocalTime","App","Date","bind","setState","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAAe,I,YCmBAA,E,4MAhBbC,aAAe,SAACC,GACd,EAAKC,MAAMC,mBAAmBF,EAAMG,OAAOC,Q,4CAG7C,WACE,OACE,yBAAQC,UAAU,UAAUC,SAAUC,KAAKR,aAA3C,oBAEE,wBAAQK,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,6B,GAXcI,IAAMC,WCabC,E,4JAXb,WACE,OACE,sBAAKL,UAAU,SAAf,UACE,iDACA,cAAC,EAAD,CAASH,mBAAoBK,KAAKN,MAAMC,qBACxC,+C,GANaM,IAAMC,W,QCmCZE,E,kDAlCb,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IAORW,KAAO,SAACC,GACN,EAAKZ,MAAMa,mBAPX,EAAKC,WAAa,CAChBC,QAAS,kBACTC,QAAS,mBACTC,SAAU,iBALK,E,gDAYnB,WACE,OAAOC,YACLZ,KAAKN,MAAMmB,MAAMC,KACjBd,KAAKQ,WAAWR,KAAKN,MAAMmB,MAAME,UACjCC,uB,+BAGJ,WAAqB,IAAD,OAClBhB,KAAKiB,MAAQC,aAAY,WACvB,EAAKb,SACJ,O,kCAGL,WACEc,cAAcnB,KAAKiB,S,oBAGrB,WACE,OAAO,mBAAGnB,UAAU,QAAb,SAAsBE,KAAKoB,qB,GA/BlBnB,IAAMC,WCoCXmB,E,kDAhCb,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,MAAQ,CAAEC,KAAM,IAAIQ,KAAQP,QAAS,WAC1C,EAAKR,gBAAkB,EAAKA,gBAAgBgB,KAArB,gBACvB,EAAK5B,mBAAqB,EAAKA,mBAAmB4B,KAAxB,gBAJT,E,mDAOnB,WACEvB,KAAKwB,UAAS,SAACC,GAAD,MAAgB,CAC5BX,KAAM,IAAIQ,W,gCAId,SAAmBP,GACjBf,KAAKwB,UAAS,SAACC,GAAD,MAAgB,CAC5BV,gB,oBAIJ,WACE,OACE,qCACE,cAAC,EAAD,CACEF,MAAOb,KAAKa,MACZlB,mBAAoBK,KAAKL,qBAE3B,cAAC,EAAD,CAAOkB,MAAOb,KAAKa,MAAON,gBAAiBP,KAAKO,yB,GA3BtCN,IAAMC,WCMTwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ef625256.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nclass Country extends React.Component {\n  handleChange = (event) => {\n    this.props.updateStateCountry(event.target.value);\n  };\n\n  render() {\n    return (\n      <select className=\"country\" onChange={this.handleChange}>\n        country\n        <option value=\"belgium\">BELGIUM</option>\n        <option value=\"iceland\">ICELAND</option>\n        <option value=\"portugal\">PORTUGAL</option>\n      </select>\n    );\n  }\n}\n\nexport default Country;\n","import React from \"react\";\nimport Country from \"./Country\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <h1>The time in&nbsp;</h1>\n        <Country updateStateCountry={this.props.updateStateCountry} />\n        <h1>&nbsp;is</h1>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { utcToZonedTime } from \"date-fns-tz\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.countryIds = {\n      belgium: \"Europe/Brussels\",\n      iceland: \"Europe/Reykjavik\",\n      portugal: \"Europe/Lisbon\",\n    };\n  }\n  tick = (countryId) => {\n    this.props.updateStateTime();\n  };\n\n  getLocalTime() {\n    return utcToZonedTime(\n      this.props.state.time,\n      this.countryIds[this.props.state.country]\n    ).toLocaleTimeString();\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return <p className=\"clock\">{this.getLocalTime()}</p>;\n  }\n}\n\nexport default Clock;\n","import logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Clock from \"./components/Clock\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { time: new Date(), country: \"belgium\" };\n    this.updateStateTime = this.updateStateTime.bind(this);\n    this.updateStateCountry = this.updateStateCountry.bind(this);\n  }\n\n  updateStateTime() {\n    this.setState((prevState) => ({\n      time: new Date(),\n    }));\n  }\n\n  updateStateCountry(country) {\n    this.setState((prevState) => ({\n      country,\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <Header\n          state={this.state}\n          updateStateCountry={this.updateStateCountry}\n        />\n        <Clock state={this.state} updateStateTime={this.updateStateTime} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}